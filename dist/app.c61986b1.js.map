{"version":3,"sources":["Classes/observable.ts","Classes/observer.ts","view/viewHandler.ts","app.ts"],"names":[],"mappings":";;;;;mGCIA;AEJA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AHGA,ACEA,ACLA,IFGA,ACEA,ACLA,IAAA,CDKA,MDFA;AAAA,ACEA,AEJA,ADDA,ICCA,UAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;AHEA,ACEA,ACLA,YFGA,ACEA,ACLA;AFMI,ACAA,AEJJ,ADEI,ICFJ,OHII,ACAA,ACFA,IAAA,CDEA,CAAoB,AEJxB,CDEI,ECFJ,EHII,ACAA,EAA0C,CDA1C,EGJJ,CFII,AEJJ,EFIuD,kBEJvD,CAAA;AHII,ACAoB,ACDhB,QFCJ,CCAoB,ACDX,IFCT,CCAoB,EDApB,CCAoB,ECDhB,CFCJ,ECAoB,ACDA,QAAQ,CAAC,aAAT,CAAuB,cAAvB,CAAhB;ADCsC,AEH9C,ADGK,ICHL,KFG8C,IAAA,CEH9C,EFG8C,CEH9C,GFG8C,IEH9C,CAAA,oBAAA,CAAA;AHCY,ACGJ,SDHI,ACGC,MAAL,GDHI,GAAsB,EAAtB;AACA,ACGP,AEJL,ADGI,EAAA,ECHJ,EDGI,CAAA,EFFQ,KGDZ,EDGI,CCHJ,ADGI,OFFQ,AGDZ,CAAA,EHCqC,CEEjC,CFFQ,EEER,UAAY,ICHhB,CAAA,ADGI,EAAwB;AFApB,AECA,QFDI,CECC,UAAL,CFDgB,AECA,GFDC,MECjB,EFDyB,CAAC,AECA,KAAK,CAAC,OFDf,CAAuB,AECd,EAA1B,SFDiB,CAAjB;AACA,ACCJ,AEHJ,ADGK,EDAD,CCFA,CCDE,GFGF,CDDQ,ACCR,AEHM,GAAC,IAAI,CHEK,CCChB,CAAA,CDDiB,KCCjB,GDDyB,ACCzB,CDD0B,AGFf,CAAA,IAAJ,EAAX,EFGW,IDDU,ACCjB,CDDwC,CCCrB,MDDF,CAAb;AACA,ACCA,AEHR,IFGQ,AEHF,IHEM,GCCG,CAAC,GAAR,AEHS,CFGG,EEHF,CHEK,GAAC,AGFF,EFGd,EAAsB,IDDE,ACCxB,CDDyB,GGFX,CAAA,SHEE,CAAuB,CGF7B,EAAlB,OHEwB,CAAhB;AACA,ACCA,AEFR,ADEI,EAAA,ECFE,EDEF,CAAA,CFDQ,ACCA,AEFF,GAAC,IAAI,CDEX,CFDiB,AECjB,CDAkB,EDDA,CCCC,CAAf,GEFO,CAAA,EHCe,CAAC,CGDpB,ADEP,CCFgB,EDEhB,ECFO,CAAX,MHCsB,CAAuB,AEC3B,QFDI,CAAd,CECJ,EAAkC,WAAlC,EAAqD;AFAjD,ACCA,AEFR,ADEQ,IAAA,IFDI,ACCA,GEFD,CAAC,ADEI,CAAC,CFDC,GAAC,ECCI,EEFvB,CFEwB,AEFF,CFEd,EDDmB,CAAC,AGD5B,ADEQ,CAAuB,YFDZ,CAAuB,AEClC,EAAsC,MFD3B,CAAX,EECA,GAAkD,UAAU,CAAC,QAAX,EAAlD;AFAA,ACCA,AEDR,ADCQ,IFDA,ACCA,AEDF,ADCE,IDAI,CAAC,CDDC,CAAC,CGAD,ADCE,CAAC,ECDF,CFCP,CAAa,EEDF,ODCX,CFDA,ACCa,ACAU,CFDC,CGAb,CFCE,AEDF,EFCK,GDDhB,EAAiC,CGA1B,CAAa,EDCpB,ECDO,ADCgC,CCD/C,GHA0C,CAAD,EAAE,EECnC,GAAmD,WAAW,CAAC,QAAZ,EAAnD;AFAI,ACCA,AEDZ,ADCK,GAHD,GFEQ,ICCG,CDDC,AGAL,CHAM,AGAL,CFCM,CAAC,IAAJ,GEDf,CAAsB,CFCI,IDDd,CAAqB,ECCrB,AEDZ,EHAY,ACCsB,CDDI;AACtB,ACCA,AEAhB,IAAM,IHDU,ACCA,CEAL,GAAC,IHDY,AGCR,EHDS,ACCC,IAAE,GAAG,CAAC,AEAhB,CAAA,GHDqB,CAAC,CGC1B,CFAI,AEAM,CAAV,EHF0B,AGEb,IAAb,CAAZ;AHAgB,ACCH,AEAb,ADAI,EAAA,IAAA,CAAA,CFDY,GGCL,CHDS,AGCR,EHDS,EECjB,CAAA,ICAJ,CHD6B,AGCP,CHDQ,IGC9B,CHHsC,AEGlC,GAAA,UAAY,KAAZ,EAAyB;AFAb,AGEhB,ADDQ,ICCF,IHFU,AECJ,GCCC,GAAG,CHFO,CECH,CFDI,CAAC,AGEL,CDDG,KAAK,ICCR,CHFgB,AGEhB,ADDa,CFDI,KAHC,IEIf,GAAsB,CCC7B,CAAmB,CAAnB,EAAqB,IAAI,CDDlB,GAAiC,SCCf,CAAA,CDDjC,GCC6B,EAArB,CAAhB;AHDgB,ACCJ,AECZ,ADDQ,IAAA,IFDQ,ECCD,CECJ,CAAC,ADDI,CFDK,ACCH,ACAD,CDAE,CDDG,GCCP,GECf,CAAsB,CFDM,CDDG,CAAC,CECxB,CAAuB,ECC/B,EFDY,EAAyB,OCA7B,EAAsC,SAAtC,GAAkD,QAAlD;AFL8B,ACMtB,AEEhB,ADFQ,ICEF,ADFE,GFNI,CCMI,CEEL,GAAG,ADFE,CAAC,GCEC,GFFS,IAAE,GAAG,AEEd,ADFV,CDAyB,AEEf,ADFa,KCEjB,CAAU,CFFR,AEEF,EAAY,IAAI,ADFtB,EAAsC,SAAtC,ECEsB,CAAA,ADF4B,ICEhC,CDFlB,CCEM,CAAd;AFDa,AEEb,ADFK,GAJD,QCMO,CAAC,SAAZ,CAAsB,KAAtB;AHHY,ACEH,KARD,CDMI,KAAI,CAAC,cAAL;ACGJ,ACAN,EAAA,IAAA,CAAA,EDAW,KAAL,ECAN,CDAiB,ACAjB,UAAA,CDA4B,ECA5B,CDA+B,SCApB,CDAL,GCAN,EAAsB;AFFZ,ACGJ,ACAJ,MFHQ,EEGJ,CDAK,CCAH,GAAG,EDAL,GDHgB,CAAC,EEGJ,CAAC,EFHV,GAAmB,EAAnB,MEGC,CAAuB,QAAvB,CAAT;AFFQ,ACGP,ACAD,GDfA,CCeA,EFHQ,AEGN,CAAC,SAAH,CFHmB,CAAC,CEGL,EAAf,EFHQ,GAAkB,EAAlB;AACA,AEGR,IAAA,EFHQ,EEGJ,CAAC,MFHY,CAAC,AEGlB,CAAa,IFHL,GAAgB,EAAhB,CEGM,GAAD,EAAI;AFFZ,ACEL,ACCE,EDDF,GDbI,CEcF,CDDF,CAAA,ACCI,CAAC,QDDL,CAAA,MAAA,GAAA,ACCE,CACE,WDFJ,ACCE,EAEE,uBAAA,MAAA,CACY,GAAG,CAAC,IAAJ,KAAa,OAAb,GAAuB,OAAvB,GAAiC,QAD7C,EACqD,aADrD,EACqD,MADrD,CAEE,GAAG,CAAC,OAFN,EAEa,mBAFb,EAEa,MAFb,CAE2B,GAAG,CAAC,IAAJ,KAAa,OAAb,GAAuB,QAAvB,GAAkC,QAF7D,EAEqE,gBAFrE,EAEqE,MAFrE,CAGM,GAAG,CAAC,QAHV,EAGkB,QAHlB,EAGkB,MAHlB,CAG2B,GAAG,CAAC,KAH/B,EAGoC,kBAHpC,CAFF;AFFD,ACEG,ACQH,KATD,IDCS,IAAL,CAAU,WAAV,CAAsB,KAAK,KAA3B;AACH,ACQF,GDVC,ACHF;AFGE,EAAA,WAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,QAAV,EAA6B;AACzB,ACER,ACQE,EAAA,IAAA,CAAA,EFVW,ACEb,KAAA,ECQE,CAAA,CFVM,CAAe,IAAf,CAAoB,OEU1B,CFVM,EEUN,UAAe,IAAf,EAA4B,UAA5B,EAA6C;AFTvC,ACtBR,ACgCI,CDhCJ,EAAA,KCgCQ,CFVK,IEUA,GAAG,OFVR,CEUgB,CAAC,aAAT,CAAuB,QAAvB,CAAZ;AFTC,AEUD,GFbA,CEaA,KAAK,CAAC,SAAN,GAAkB,EAAlB;ADjCS,OAAA,CAAA,KAAA,GAAA,KAAA,EAyBb;ADDI,EAAA,WAAA,CAAA,SAAA,CAAA,WAAA,AEUS,GFVT,AEUU,UFVE,QAAZ,EAA8B;AAC1B,ACCR,ACSM,IDTN,KDDa,CEUH,IAAI,GAAG,CFVT,ACCR,GDDuB,AEUF,CAAC,IFVM,EEUX,CAAY,MFVN,CAAe,GEUR,CAAD,EFVN,AEUQ,CFVc,UAAA,GAAA,EAAG;AACpC,ACAZ,ACUQ,aFVW,EEUJ,CFVO,AEUN,CAAC,IFVQ,IEUV,IFVH,CEUkB,UAAU,CAAC,CAAD,CAAhC;AFTC,ACDT,ACWO,KFZgB,CAAf,CEUS,CAAX,IDTN;ADEQ,ACCJ,ACSE,IFVE,MEUE,CFVK,ACCX,CDDY,EEUF,CFVN,CAAY,CEUH,IAAI,CAAC,CAAD,CAAJ,CDTb,ACSqB,CDTD,EAApB,EAAuC,GCSrC,CDTF,EAAgD,UDD5C,EAA4C,KAAK,SAAjD;AACH,ACAmB,ACUlB,GFfF,MCKoB,CCUd,CDVc,GAAA,EAAA,ICUJ,GAAG,CAAjB;ADVqC,ACWrC,SDXqC,CCWjC,GDXiC,GAAA,IAAA,CCWtB,GAAG,CAAlB;AFVF,ACHA,ACcE,EFXF,IEWE,GDdF,CCcM,CAAC,EFXP,CAAA,IEWE,CDdF,ACce,GDdJ,CDGX,ACHA,CDGA,KEWgB,CAAD,EAAE,MFXjB,GAAA,YAAA;AAAA,ACFA,ACcI,QFZJ,CCFA,GCcQ,CFZR,AEYS,CAAC,EFZV,EEYQ,EFZR,ACFA,GAAY,ACcO,CDdnB,MCcI,EAAwB;ADZxB,ACaE,SDbG,CCaH,KDbF,KCaY,IAAI,CAAC,CAAC,OAAhB;AFZF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","file":"app.c61986b1.js","sourceRoot":"../src","sourcesContent":["import {IObserver} from '../Interfaces/IObserver'\nimport { ISubject } from '../Interfaces/ISubject' \n\nexport class Transaction implements ISubject{\n    private observers:IObserver[]=[];\n    private transactionList:Object[]=[];\n    constructor(){\n        let htmlFullname=document.querySelector(\"#fullname\") as HTMLInputElement;\n        let htmlType=document.querySelector(\"#type\") as HTMLSelectElement;\n        let htmlMontant=document.querySelector(\"#montant\") as HTMLInputElement;\n        let htmlMotif=document.querySelector(\"#motif\") as HTMLInputElement;\n        let button=document.querySelector(\"#valid\") as HTMLButtonElement;\n        button.addEventListener('click', (e)=>{\n            this.transactionList.push({\n                fullname:htmlFullname.value,\n                type:htmlType.value,\n                montant:+htmlMontant.value,\n                motif:htmlMotif.value\n            });\n            this.notifyObserver();\n            htmlFullname.value=\"\";\n            htmlMontant.value=\"\";\n            htmlMotif.value=\"\";\n        })\n    }\n    subscribe(observer: IObserver) {\n        this.observers.push(observer);\n        this.notifyObserver();        \n    }\n    unsubscribe(observer:IObserver){\n        this.observers=this.observers.filter(obs =>{\n            return obs!==observer;\n        })\n        console.log(\"Unsubscribe--Observers Array\", this.observers);\n    }\n    notifyObserver() {\n        this.observers.forEach(element => {\n            element.update(this.transactionList);\n        });\n    }\n}\n","import { IObserver } from \"../Interfaces/IObserver\";\nimport { ISubject } from \"../Interfaces/ISubject\";\nimport { View } from \"../view/viewHandler\";\n\n//class solde implementation\nexport class Solde implements IObserver{\n    constructor(private solde:number, private view:View){\n        this.render();\n    }\n    update(data: any []) {\n        console.log('update', data);\n        let totalDebit=0;\n        let totalCredit=0;\n        data.forEach(obj =>{\n            if(obj.type==='Debit'){\n                totalDebit+=obj.montant\n            }\n            \n            if(obj.type === 'Credit'){\n                totalCredit+=obj.montant;\n            }\n        });\n        this.solde=totalCredit - totalDebit;\n        this.render();\n    }\n    render(){\n        this.view.renderSolde(this.solde);\n    }\n}\n\n//Nombre de transaction\nexport class NbTransactions implements IObserver{\n    totalDebit=0;\n    totalCredit=0;\n    constructor(private nb:number, private view:View){\n        this.render();\n    }\n    update(data: any []) {\n        \n        this.totalCredit=data.filter((obj)=>{\n            return obj.type===\"Credit\";\n        }).length;\n        this.totalDebit=data.filter((obj)=>{\n            return obj.type===\"Debit\";\n        }).length;\n        \n        this.render();\n    }\n    render(){\n        this.view.renderNbTrans(this.totalDebit,this.totalCredit);\n    }\n}\n\nexport class State implements IObserver{\n    totalDebit=0;\n    totalCredit=0;\n    constructor(private nb:number, private view:View){\n        this.render();\n    }\n    update(data: any []) {\n        this.totalDebit=0;\n        this.totalCredit=0;\n        data.forEach(obj =>{\n            if(obj.type==='Debit'){\n                this.totalDebit+=obj.montant\n            }\n            \n            if(obj.type === 'Credit'){\n                this.totalCredit+=obj.montant;\n            }\n        });\n        \n        this.render();\n    }\n    render(){\n        let state = this.totalCredit - this.totalDebit <0?'Debiteur':'Crediteur';\n        this.view.renderState(state);\n    }\n}\n\nexport class List implements IObserver {\n  constructor(private view: View) {}\n  update(data: any[]) {\n    this.view.renderList(data);\n  }\n}\n\nexport class Personal implements IObserver {\n  private distinctNames: any[];\n  constructor(private view: View) {\n  }\n  update(data: any[]) {\n    this.distinctNames = Array.from(\n      new Set(\n        data.map((obj) => {\n          return obj.fullname;\n        })\n      )\n    );\n    this.view.renderPersonal(data, this.distinctNames);\n\n    \n  }\n}\n\n\n","export class View {\n\n  private soldeValue:HTMLElement;\n\n    constructor(){\n        this.soldeValue=document.querySelector('#solde-value') as HTMLElement;\n    }\n    renderSolde(solde:number){\n        this.soldeValue.innerHTML=solde.toString();\n    }\n\n    renderNbTrans(totalDebit: number, totalCredit: number) {\n        document.querySelector('#totalDebit').innerHTML = totalDebit.toString();\n        document.querySelector('#totalCredit').innerHTML = totalCredit.toString();        \n    }\n\n    renderState(state: string) {\n        let divClass = state === 'Debiteur' ?'debiteur':'crediteur';\n        document.querySelector('#state-text').className = divClass;\n        document.querySelector('#state-text').innerHTML = state;\n    }\n  \n  renderList(data: any[]) {\n    let ul = document.querySelector(\"#liste\");\n    ul.innerHTML = \"\";\n    data.forEach((obj) => {\n      ul.insertAdjacentHTML(\n        \"beforeend\",\n        `\n        <li class=${obj.type === \"Debit\" ? \"debit\" : \"credit\"}>\n        ${obj.montant} F ont été ${obj.type === \"Debit\" ? \"Retiré\" : \"Déposé\"}\n        par ${obj.fullname} pour ${obj.motif} </li>\n        `\n      );\n    });\n  }\n  renderPersonal(data: any[], uniqueName: any[]) {\n    let table = document.querySelector(\"#autor\");\n    table.innerHTML = \"\";\n    for (let i = 0; i < uniqueName.length; i++) {\n      let arr1 = data.filter((e) => {\n        return e.fullname === uniqueName[i];\n      });\n      let name = arr1[0].fullname;\n      let totalDebit = 0;\n      let totalCredit = 0;\n      arr1.forEach((e) => {\n        if (e.type === \"Debit\") {\n          totalDebit += e.montant;\n        } else {\n          totalCredit += e.montant;\n        }\n      });\n      console.log(\n        `name:${name} totalCredit:${totalCredit} totalDebit:${totalDebit}`\n      );\n      table.insertAdjacentHTML(\n        \"beforeend\",\n        `\n        <tr>\n            <td>${name}</td>\n            <td>${totalDebit}</td>\n            <td>${totalCredit}</td>\n        </tr>\n        `\n      );\n    }\n  }\n}\n","import { Transaction } from \"./Classes/observable\";\nimport { List, Solde, State } from \"./Classes/observer\";\nimport { View } from \"./view/viewHandler\";\nimport { Personal } from \"./Classes/observer\";\nimport { NbTransactions } from \"./Classes/observer\";\n\nconst view=new View();\nconst transaction=new Transaction();\n\nconst list=new List(view);\ntransaction.subscribe(list);\n\nconst personal=new Personal(view);\ntransaction.subscribe(personal);\n\nconst solde=new Solde(0, view);\ntransaction.subscribe(solde);\n\nconst nbTrans = new NbTransactions(0,new View());\ntransaction.subscribe(nbTrans);\n\nconst state = new State(0,new View());\ntransaction.subscribe(state);\n\n"]}